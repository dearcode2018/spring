












当前示例设计讲解
1) 一个用户可以拥有多个角色，一个角色可以拥有多个资源
2) 表设计: 用户-角色表 用户和角色id联合唯一，角色-资源表 角色和资源id
联合唯一.
3) 访问一个资源: 可以获取资源的url或名称，首先判断当前请求的会话是否已经登录，
获取当前登录用户的角色列表，以及每个角色对应的资源列表(即权限列表)
然后，判断该资源的url或名称是否在其中.


三、流程
 1）容器启动(MySecurityMetadataSource：loadResourceDefine加载 资源与权限 列表)
 2）用户发出请求
 3）过滤器拦截(MySecurityFilter:doFilter)
 4）取得请求资源所需权限(MySecurityMetadataSource:getAttributes)
 5）匹配用户拥有权限和请求权限(MyAccessDecisionManager:decide)，
 如果用户没有相应的权限，
     执行第6步，否则执行第7步。
 6）登录
 7）验证并授权(MyUserDetailServiceImpl:loadUserByUsername)
 8）重复4,5




































